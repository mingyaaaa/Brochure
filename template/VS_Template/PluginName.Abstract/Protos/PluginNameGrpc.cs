// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/$ext_safeprojectname$.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Proto.$ext_safeprojectname$Grpc {
  public static partial class RolesService
  {
    static readonly string __ServiceName = "Proto.$ext_safeprojectname$Grpc.RolesService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.$ext_safeprojectname$Grpc.RolesRequest> __Marshaller_Proto_$ext_safeprojectname$Grpc_RolesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.$ext_safeprojectname$Grpc.RolesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.$ext_safeprojectname$Grpc.RolesResponse> __Marshaller_Proto_$ext_safeprojectname$Grpc_RolesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.$ext_safeprojectname$Grpc.RolesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse> __Marshaller_Proto_$ext_safeprojectname$Grpc_FailIdsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.$ext_safeprojectname$Grpc.MutiRolesRequest> __Marshaller_Proto_$ext_safeprojectname$Grpc_MutiRolesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.$ext_safeprojectname$Grpc.MutiRolesRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.$ext_safeprojectname$Grpc.RolesRequest, global::Proto.$ext_safeprojectname$Grpc.RolesResponse> __Method_GetRoles = new grpc::Method<global::Proto.$ext_safeprojectname$Grpc.RolesRequest, global::Proto.$ext_safeprojectname$Grpc.RolesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRoles",
        __Marshaller_Proto_$ext_safeprojectname$Grpc_RolesRequest,
        __Marshaller_Proto_$ext_safeprojectname$Grpc_RolesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.$ext_safeprojectname$Grpc.RolesRequest, global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse> __Method_DeleteRoles = new grpc::Method<global::Proto.$ext_safeprojectname$Grpc.RolesRequest, global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRoles",
        __Marshaller_Proto_$ext_safeprojectname$Grpc_RolesRequest,
        __Marshaller_Proto_$ext_safeprojectname$Grpc_FailIdsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.$ext_safeprojectname$Grpc.RolesRequest, global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse> __Method_UpdateRoles = new grpc::Method<global::Proto.$ext_safeprojectname$Grpc.RolesRequest, global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRoles",
        __Marshaller_Proto_$ext_safeprojectname$Grpc_RolesRequest,
        __Marshaller_Proto_$ext_safeprojectname$Grpc_FailIdsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.$ext_safeprojectname$Grpc.RolesRequest, global::Proto.$ext_safeprojectname$Grpc.RolesResponse> __Method_Insert = new grpc::Method<global::Proto.$ext_safeprojectname$Grpc.RolesRequest, global::Proto.$ext_safeprojectname$Grpc.RolesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Insert",
        __Marshaller_Proto_$ext_safeprojectname$Grpc_RolesRequest,
        __Marshaller_Proto_$ext_safeprojectname$Grpc_RolesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.$ext_safeprojectname$Grpc.MutiRolesRequest, global::Proto.$ext_safeprojectname$Grpc.RolesResponse> __Method_InsertMuti = new grpc::Method<global::Proto.$ext_safeprojectname$Grpc.MutiRolesRequest, global::Proto.$ext_safeprojectname$Grpc.RolesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InsertMuti",
        __Marshaller_Proto_$ext_safeprojectname$Grpc_MutiRolesRequest,
        __Marshaller_Proto_$ext_safeprojectname$Grpc_RolesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.$ext_safeprojectname$Grpc.$ext_safeprojectname$Reflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of RolesService</summary>
    [grpc::BindServiceMethod(typeof(RolesService), "BindService")]
    public abstract partial class RolesServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.$ext_safeprojectname$Grpc.RolesResponse> GetRoles(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse> DeleteRoles(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse> UpdateRoles(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.$ext_safeprojectname$Grpc.RolesResponse> Insert(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.$ext_safeprojectname$Grpc.RolesResponse> InsertMuti(global::Proto.$ext_safeprojectname$Grpc.MutiRolesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for RolesService</summary>
    public partial class RolesServiceClient : grpc::ClientBase<RolesServiceClient>
    {
      /// <summary>Creates a new client for RolesService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public RolesServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for RolesService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public RolesServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected RolesServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected RolesServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.$ext_safeprojectname$Grpc.RolesResponse GetRoles(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRoles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.$ext_safeprojectname$Grpc.RolesResponse GetRoles(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRoles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.$ext_safeprojectname$Grpc.RolesResponse> GetRolesAsync(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRolesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.$ext_safeprojectname$Grpc.RolesResponse> GetRolesAsync(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRoles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse DeleteRoles(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRoles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse DeleteRoles(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRoles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse> DeleteRolesAsync(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRolesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse> DeleteRolesAsync(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRoles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse UpdateRoles(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRoles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse UpdateRoles(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateRoles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse> UpdateRolesAsync(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRolesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse> UpdateRolesAsync(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateRoles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.$ext_safeprojectname$Grpc.RolesResponse Insert(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Insert(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.$ext_safeprojectname$Grpc.RolesResponse Insert(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Insert, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.$ext_safeprojectname$Grpc.RolesResponse> InsertAsync(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.$ext_safeprojectname$Grpc.RolesResponse> InsertAsync(global::Proto.$ext_safeprojectname$Grpc.RolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Insert, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.$ext_safeprojectname$Grpc.RolesResponse InsertMuti(global::Proto.$ext_safeprojectname$Grpc.MutiRolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertMuti(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.$ext_safeprojectname$Grpc.RolesResponse InsertMuti(global::Proto.$ext_safeprojectname$Grpc.MutiRolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InsertMuti, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.$ext_safeprojectname$Grpc.RolesResponse> InsertMutiAsync(global::Proto.$ext_safeprojectname$Grpc.MutiRolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertMutiAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.$ext_safeprojectname$Grpc.RolesResponse> InsertMutiAsync(global::Proto.$ext_safeprojectname$Grpc.MutiRolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InsertMuti, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override RolesServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new RolesServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(RolesServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetRoles, serviceImpl.GetRoles)
          .AddMethod(__Method_DeleteRoles, serviceImpl.DeleteRoles)
          .AddMethod(__Method_UpdateRoles, serviceImpl.UpdateRoles)
          .AddMethod(__Method_Insert, serviceImpl.Insert)
          .AddMethod(__Method_InsertMuti, serviceImpl.InsertMuti).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, RolesServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetRoles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.$ext_safeprojectname$Grpc.RolesRequest, global::Proto.$ext_safeprojectname$Grpc.RolesResponse>(serviceImpl.GetRoles));
      serviceBinder.AddMethod(__Method_DeleteRoles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.$ext_safeprojectname$Grpc.RolesRequest, global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse>(serviceImpl.DeleteRoles));
      serviceBinder.AddMethod(__Method_UpdateRoles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.$ext_safeprojectname$Grpc.RolesRequest, global::Proto.$ext_safeprojectname$Grpc.FailIdsResponse>(serviceImpl.UpdateRoles));
      serviceBinder.AddMethod(__Method_Insert, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.$ext_safeprojectname$Grpc.RolesRequest, global::Proto.$ext_safeprojectname$Grpc.RolesResponse>(serviceImpl.Insert));
      serviceBinder.AddMethod(__Method_InsertMuti, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.$ext_safeprojectname$Grpc.MutiRolesRequest, global::Proto.$ext_safeprojectname$Grpc.RolesResponse>(serviceImpl.InsertMuti));
    }

  }
}
#endregion
