// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/orgainzation.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Proto.Orgainzation.Grpc {
  public static partial class OrgainzationService
  {
    static readonly string __ServiceName = "Proto.Orgainzation.Grpc.OrgainzationService";

    static readonly grpc::Marshaller<global::Proto.Orgainzation.Grpc.OrgainzationRequest> __Marshaller_Proto_Orgainzation_Grpc_OrgainzationRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.Orgainzation.Grpc.OrgainzationRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.Orgainzation.Grpc.OrgainzationResponse> __Marshaller_Proto_Orgainzation_Grpc_OrgainzationResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.Orgainzation.Grpc.OrgainzationResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.Orgainzation.Grpc.FailIdsResponse> __Marshaller_Proto_Orgainzation_Grpc_FailIdsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.Orgainzation.Grpc.FailIdsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.Orgainzation.Grpc.MutiOrgainzationRequest> __Marshaller_Proto_Orgainzation_Grpc_MutiOrgainzationRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.Orgainzation.Grpc.MutiOrgainzationRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::Proto.Orgainzation.Grpc.OrgainzationRequest, global::Proto.Orgainzation.Grpc.OrgainzationResponse> __Method_GetOrgainzation = new grpc::Method<global::Proto.Orgainzation.Grpc.OrgainzationRequest, global::Proto.Orgainzation.Grpc.OrgainzationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrgainzation",
        __Marshaller_Proto_Orgainzation_Grpc_OrgainzationRequest,
        __Marshaller_Proto_Orgainzation_Grpc_OrgainzationResponse);

    static readonly grpc::Method<global::Proto.Orgainzation.Grpc.OrgainzationRequest, global::Proto.Orgainzation.Grpc.FailIdsResponse> __Method_DeleteOrgainzation = new grpc::Method<global::Proto.Orgainzation.Grpc.OrgainzationRequest, global::Proto.Orgainzation.Grpc.FailIdsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteOrgainzation",
        __Marshaller_Proto_Orgainzation_Grpc_OrgainzationRequest,
        __Marshaller_Proto_Orgainzation_Grpc_FailIdsResponse);

    static readonly grpc::Method<global::Proto.Orgainzation.Grpc.OrgainzationRequest, global::Proto.Orgainzation.Grpc.FailIdsResponse> __Method_UpdateOrgainzation = new grpc::Method<global::Proto.Orgainzation.Grpc.OrgainzationRequest, global::Proto.Orgainzation.Grpc.FailIdsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateOrgainzation",
        __Marshaller_Proto_Orgainzation_Grpc_OrgainzationRequest,
        __Marshaller_Proto_Orgainzation_Grpc_FailIdsResponse);

    static readonly grpc::Method<global::Proto.Orgainzation.Grpc.OrgainzationRequest, global::Proto.Orgainzation.Grpc.OrgainzationResponse> __Method_Insert = new grpc::Method<global::Proto.Orgainzation.Grpc.OrgainzationRequest, global::Proto.Orgainzation.Grpc.OrgainzationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Insert",
        __Marshaller_Proto_Orgainzation_Grpc_OrgainzationRequest,
        __Marshaller_Proto_Orgainzation_Grpc_OrgainzationResponse);

    static readonly grpc::Method<global::Proto.Orgainzation.Grpc.MutiOrgainzationRequest, global::Proto.Orgainzation.Grpc.OrgainzationResponse> __Method_InsertMuti = new grpc::Method<global::Proto.Orgainzation.Grpc.MutiOrgainzationRequest, global::Proto.Orgainzation.Grpc.OrgainzationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InsertMuti",
        __Marshaller_Proto_Orgainzation_Grpc_MutiOrgainzationRequest,
        __Marshaller_Proto_Orgainzation_Grpc_OrgainzationResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.Orgainzation.Grpc.OrgainzationReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of OrgainzationService</summary>
    [grpc::BindServiceMethod(typeof(OrgainzationService), "BindService")]
    public abstract partial class OrgainzationServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Proto.Orgainzation.Grpc.OrgainzationResponse> GetOrgainzation(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.Orgainzation.Grpc.FailIdsResponse> DeleteOrgainzation(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.Orgainzation.Grpc.FailIdsResponse> UpdateOrgainzation(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.Orgainzation.Grpc.OrgainzationResponse> Insert(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.Orgainzation.Grpc.OrgainzationResponse> InsertMuti(global::Proto.Orgainzation.Grpc.MutiOrgainzationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for OrgainzationService</summary>
    public partial class OrgainzationServiceClient : grpc::ClientBase<OrgainzationServiceClient>
    {
      /// <summary>Creates a new client for OrgainzationService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public OrgainzationServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for OrgainzationService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public OrgainzationServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected OrgainzationServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected OrgainzationServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Proto.Orgainzation.Grpc.OrgainzationResponse GetOrgainzation(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrgainzation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.Orgainzation.Grpc.OrgainzationResponse GetOrgainzation(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrgainzation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.Orgainzation.Grpc.OrgainzationResponse> GetOrgainzationAsync(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrgainzationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.Orgainzation.Grpc.OrgainzationResponse> GetOrgainzationAsync(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrgainzation, null, options, request);
      }
      public virtual global::Proto.Orgainzation.Grpc.FailIdsResponse DeleteOrgainzation(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteOrgainzation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.Orgainzation.Grpc.FailIdsResponse DeleteOrgainzation(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteOrgainzation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.Orgainzation.Grpc.FailIdsResponse> DeleteOrgainzationAsync(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteOrgainzationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.Orgainzation.Grpc.FailIdsResponse> DeleteOrgainzationAsync(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteOrgainzation, null, options, request);
      }
      public virtual global::Proto.Orgainzation.Grpc.FailIdsResponse UpdateOrgainzation(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrgainzation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.Orgainzation.Grpc.FailIdsResponse UpdateOrgainzation(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateOrgainzation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.Orgainzation.Grpc.FailIdsResponse> UpdateOrgainzationAsync(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrgainzationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.Orgainzation.Grpc.FailIdsResponse> UpdateOrgainzationAsync(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateOrgainzation, null, options, request);
      }
      public virtual global::Proto.Orgainzation.Grpc.OrgainzationResponse Insert(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Insert(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.Orgainzation.Grpc.OrgainzationResponse Insert(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Insert, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.Orgainzation.Grpc.OrgainzationResponse> InsertAsync(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.Orgainzation.Grpc.OrgainzationResponse> InsertAsync(global::Proto.Orgainzation.Grpc.OrgainzationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Insert, null, options, request);
      }
      public virtual global::Proto.Orgainzation.Grpc.OrgainzationResponse InsertMuti(global::Proto.Orgainzation.Grpc.MutiOrgainzationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertMuti(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.Orgainzation.Grpc.OrgainzationResponse InsertMuti(global::Proto.Orgainzation.Grpc.MutiOrgainzationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InsertMuti, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.Orgainzation.Grpc.OrgainzationResponse> InsertMutiAsync(global::Proto.Orgainzation.Grpc.MutiOrgainzationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertMutiAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.Orgainzation.Grpc.OrgainzationResponse> InsertMutiAsync(global::Proto.Orgainzation.Grpc.MutiOrgainzationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InsertMuti, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override OrgainzationServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new OrgainzationServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(OrgainzationServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetOrgainzation, serviceImpl.GetOrgainzation)
          .AddMethod(__Method_DeleteOrgainzation, serviceImpl.DeleteOrgainzation)
          .AddMethod(__Method_UpdateOrgainzation, serviceImpl.UpdateOrgainzation)
          .AddMethod(__Method_Insert, serviceImpl.Insert)
          .AddMethod(__Method_InsertMuti, serviceImpl.InsertMuti).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, OrgainzationServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetOrgainzation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Orgainzation.Grpc.OrgainzationRequest, global::Proto.Orgainzation.Grpc.OrgainzationResponse>(serviceImpl.GetOrgainzation));
      serviceBinder.AddMethod(__Method_DeleteOrgainzation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Orgainzation.Grpc.OrgainzationRequest, global::Proto.Orgainzation.Grpc.FailIdsResponse>(serviceImpl.DeleteOrgainzation));
      serviceBinder.AddMethod(__Method_UpdateOrgainzation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Orgainzation.Grpc.OrgainzationRequest, global::Proto.Orgainzation.Grpc.FailIdsResponse>(serviceImpl.UpdateOrgainzation));
      serviceBinder.AddMethod(__Method_Insert, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Orgainzation.Grpc.OrgainzationRequest, global::Proto.Orgainzation.Grpc.OrgainzationResponse>(serviceImpl.Insert));
      serviceBinder.AddMethod(__Method_InsertMuti, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Orgainzation.Grpc.MutiOrgainzationRequest, global::Proto.Orgainzation.Grpc.OrgainzationResponse>(serviceImpl.InsertMuti));
    }

  }
}
#endregion
